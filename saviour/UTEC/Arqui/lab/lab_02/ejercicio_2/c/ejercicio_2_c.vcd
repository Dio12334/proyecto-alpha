$date
	Tue May  5 08:03:29 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module ejercicio_2_b_tb $end
$var wire 16 ! out_1 [15:0] $end
$var reg 16 " in_1 [15:0] $end
$var reg 16 # in_10 [15:0] $end
$var reg 16 $ in_11 [15:0] $end
$var reg 16 % in_12 [15:0] $end
$var reg 16 & in_13 [15:0] $end
$var reg 16 ' in_14 [15:0] $end
$var reg 16 ( in_15 [15:0] $end
$var reg 16 ) in_16 [15:0] $end
$var reg 16 * in_2 [15:0] $end
$var reg 16 + in_3 [15:0] $end
$var reg 16 , in_4 [15:0] $end
$var reg 16 - in_5 [15:0] $end
$var reg 16 . in_6 [15:0] $end
$var reg 16 / in_7 [15:0] $end
$var reg 16 0 in_8 [15:0] $end
$var reg 16 1 in_9 [15:0] $end
$var reg 1 2 sel_1 $end
$var reg 1 3 sel_2 $end
$var reg 1 4 sel_3 $end
$var reg 1 5 sel_4 $end
$scope module e2_b $end
$var wire 16 6 in_1 [15:0] $end
$var wire 16 7 in_10 [15:0] $end
$var wire 16 8 in_11 [15:0] $end
$var wire 16 9 in_12 [15:0] $end
$var wire 16 : in_13 [15:0] $end
$var wire 16 ; in_14 [15:0] $end
$var wire 16 < in_15 [15:0] $end
$var wire 16 = in_16 [15:0] $end
$var wire 16 > in_2 [15:0] $end
$var wire 16 ? in_3 [15:0] $end
$var wire 16 @ in_4 [15:0] $end
$var wire 16 A in_5 [15:0] $end
$var wire 16 B in_6 [15:0] $end
$var wire 16 C in_7 [15:0] $end
$var wire 16 D in_8 [15:0] $end
$var wire 16 E in_9 [15:0] $end
$var wire 1 2 sel_1 $end
$var wire 1 3 sel_2 $end
$var wire 1 4 sel_3 $end
$var wire 1 5 sel_4 $end
$var wire 16 F wi_2 [15:0] $end
$var wire 16 G wi_1 [15:0] $end
$var wire 16 H out_1 [15:0] $end
$scope module a1_0 $end
$var wire 16 I in_1 [15:0] $end
$var wire 16 J in_2 [15:0] $end
$var wire 16 K in_3 [15:0] $end
$var wire 16 L in_4 [15:0] $end
$var wire 16 M in_5 [15:0] $end
$var wire 16 N in_6 [15:0] $end
$var wire 16 O in_7 [15:0] $end
$var wire 16 P in_8 [15:0] $end
$var wire 1 2 sel_1 $end
$var wire 1 3 sel_2 $end
$var wire 1 4 sel_3 $end
$var wire 16 Q wi_6 [15:0] $end
$var wire 16 R wi_5 [15:0] $end
$var wire 16 S wi_4 [15:0] $end
$var wire 16 T wi_3 [15:0] $end
$var wire 16 U wi_2 [15:0] $end
$var wire 16 V wi_1 [15:0] $end
$var wire 16 W out_1 [15:0] $end
$scope module a1_0 $end
$var wire 16 X in_1 [15:0] $end
$var wire 16 Y in_2 [15:0] $end
$var wire 1 2 sel_3 $end
$var wire 16 Z out_1 [15:0] $end
$upscope $end
$scope module a1_1 $end
$var wire 16 [ in_1 [15:0] $end
$var wire 16 \ in_2 [15:0] $end
$var wire 1 2 sel_3 $end
$var wire 16 ] out_1 [15:0] $end
$upscope $end
$scope module a1_2 $end
$var wire 16 ^ in_1 [15:0] $end
$var wire 16 _ in_2 [15:0] $end
$var wire 1 2 sel_3 $end
$var wire 16 ` out_1 [15:0] $end
$upscope $end
$scope module a1_3 $end
$var wire 16 a in_1 [15:0] $end
$var wire 16 b in_2 [15:0] $end
$var wire 1 2 sel_3 $end
$var wire 16 c out_1 [15:0] $end
$upscope $end
$scope module a2_0 $end
$var wire 16 d in_1 [15:0] $end
$var wire 16 e in_2 [15:0] $end
$var wire 1 3 sel_3 $end
$var wire 16 f out_1 [15:0] $end
$upscope $end
$scope module a2_1 $end
$var wire 16 g in_1 [15:0] $end
$var wire 16 h in_2 [15:0] $end
$var wire 1 3 sel_3 $end
$var wire 16 i out_1 [15:0] $end
$upscope $end
$scope module a3_0 $end
$var wire 16 j in_1 [15:0] $end
$var wire 16 k in_2 [15:0] $end
$var wire 1 4 sel_3 $end
$var wire 16 l out_1 [15:0] $end
$upscope $end
$upscope $end
$scope module a1_1 $end
$var wire 16 m in_1 [15:0] $end
$var wire 16 n in_2 [15:0] $end
$var wire 16 o in_3 [15:0] $end
$var wire 16 p in_4 [15:0] $end
$var wire 16 q in_5 [15:0] $end
$var wire 16 r in_6 [15:0] $end
$var wire 16 s in_7 [15:0] $end
$var wire 16 t in_8 [15:0] $end
$var wire 1 2 sel_1 $end
$var wire 1 3 sel_2 $end
$var wire 1 4 sel_3 $end
$var wire 16 u wi_6 [15:0] $end
$var wire 16 v wi_5 [15:0] $end
$var wire 16 w wi_4 [15:0] $end
$var wire 16 x wi_3 [15:0] $end
$var wire 16 y wi_2 [15:0] $end
$var wire 16 z wi_1 [15:0] $end
$var wire 16 { out_1 [15:0] $end
$scope module a1_0 $end
$var wire 16 | in_1 [15:0] $end
$var wire 16 } in_2 [15:0] $end
$var wire 1 2 sel_3 $end
$var wire 16 ~ out_1 [15:0] $end
$upscope $end
$scope module a1_1 $end
$var wire 16 !" in_1 [15:0] $end
$var wire 16 "" in_2 [15:0] $end
$var wire 1 2 sel_3 $end
$var wire 16 #" out_1 [15:0] $end
$upscope $end
$scope module a1_2 $end
$var wire 16 $" in_1 [15:0] $end
$var wire 16 %" in_2 [15:0] $end
$var wire 1 2 sel_3 $end
$var wire 16 &" out_1 [15:0] $end
$upscope $end
$scope module a1_3 $end
$var wire 16 '" in_1 [15:0] $end
$var wire 16 (" in_2 [15:0] $end
$var wire 1 2 sel_3 $end
$var wire 16 )" out_1 [15:0] $end
$upscope $end
$scope module a2_0 $end
$var wire 16 *" in_1 [15:0] $end
$var wire 16 +" in_2 [15:0] $end
$var wire 1 3 sel_3 $end
$var wire 16 ," out_1 [15:0] $end
$upscope $end
$scope module a2_1 $end
$var wire 16 -" in_1 [15:0] $end
$var wire 16 ." in_2 [15:0] $end
$var wire 1 3 sel_3 $end
$var wire 16 /" out_1 [15:0] $end
$upscope $end
$scope module a3_0 $end
$var wire 16 0" in_1 [15:0] $end
$var wire 16 1" in_2 [15:0] $end
$var wire 1 4 sel_3 $end
$var wire 16 2" out_1 [15:0] $end
$upscope $end
$upscope $end
$scope module a2_0 $end
$var wire 16 3" in_1 [15:0] $end
$var wire 16 4" in_2 [15:0] $end
$var wire 1 5 sel_3 $end
$var wire 16 5" out_1 [15:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 5"
b1000 4"
b0 3"
b1000 2"
b1100 1"
b1000 0"
b1100 /"
b1110 ."
b1100 -"
b1000 ,"
b1010 +"
b1000 *"
b1110 )"
b1111 ("
b1110 '"
b1100 &"
b1101 %"
b1100 $"
b1010 #"
b1011 ""
b1010 !"
b1000 ~
b1001 }
b1000 |
b1000 {
b1000 z
b1010 y
b1100 x
b1110 w
b1000 v
b1100 u
b1111 t
b1110 s
b1101 r
b1100 q
b1011 p
b1010 o
b1001 n
b1000 m
b0 l
b100 k
b0 j
b100 i
b110 h
b100 g
b0 f
b10 e
b0 d
b110 c
b111 b
b110 a
b100 `
b101 _
b100 ^
b10 ]
b11 \
b10 [
b0 Z
b1 Y
b0 X
b0 W
b0 V
b10 U
b100 T
b110 S
b0 R
b100 Q
b111 P
b110 O
b101 N
b100 M
b11 L
b10 K
b1 J
b0 I
b0 H
b0 G
b1000 F
b1000 E
b111 D
b110 C
b101 B
b100 A
b11 @
b10 ?
b1 >
b1111 =
b1110 <
b1101 ;
b1100 :
b1011 9
b1010 8
b1001 7
b0 6
05
04
03
02
b1000 1
b111 0
b110 /
b101 .
b100 -
b11 ,
b10 +
b1 *
b1111 )
b1110 (
b1101 '
b1100 &
b1011 %
b1010 $
b1001 #
b0 "
b0 !
$end
#1
b1000 !
b1000 H
b1000 5"
15
#2
b100 !
b100 H
b100 5"
b100 G
b100 W
b100 l
b100 3"
b1100 F
b1100 {
b1100 2"
b1100 4"
05
14
#3
b1100 !
b1100 H
b1100 5"
15
#4
b10 !
b10 H
b10 5"
b10 G
b10 W
b10 l
b10 3"
b1010 F
b1010 {
b1010 2"
b1010 4"
b10 R
b10 f
b10 j
b110 Q
b110 i
b110 k
b1010 v
b1010 ,"
b1010 0"
b1110 u
b1110 /"
b1110 1"
05
04
13
#5
b1010 !
b1010 H
b1010 5"
15
#6
b110 !
b110 H
b110 5"
b110 G
b110 W
b110 l
b110 3"
b1110 F
b1110 {
b1110 2"
b1110 4"
05
14
#7
b1110 !
b1110 H
b1110 5"
15
#8
b1 !
b1 H
b1 5"
b1 G
b1 W
b1 l
b1 3"
b1001 F
b1001 {
b1001 2"
b1001 4"
b1 R
b1 f
b1 j
b101 Q
b101 i
b101 k
b1001 v
b1001 ,"
b1001 0"
b1101 u
b1101 /"
b1101 1"
b1 V
b1 Z
b1 d
b11 U
b11 ]
b11 e
b101 T
b101 `
b101 g
b111 S
b111 c
b111 h
b1001 z
b1001 ~
b1001 *"
b1011 y
b1011 #"
b1011 +"
b1101 x
b1101 &"
b1101 -"
b1111 w
b1111 )"
b1111 ."
05
04
03
12
#9
b1001 !
b1001 H
b1001 5"
15
#10
b101 !
b101 H
b101 5"
b101 G
b101 W
b101 l
b101 3"
b1101 F
b1101 {
b1101 2"
b1101 4"
05
14
#11
b1101 !
b1101 H
b1101 5"
15
#12
b11 !
b11 H
b11 5"
b11 G
b11 W
b11 l
b11 3"
b1011 F
b1011 {
b1011 2"
b1011 4"
b11 R
b11 f
b11 j
b111 Q
b111 i
b111 k
b1011 v
b1011 ,"
b1011 0"
b1111 u
b1111 /"
b1111 1"
05
04
13
#13
b1011 !
b1011 H
b1011 5"
15
#14
b111 !
b111 H
b111 5"
b111 G
b111 W
b111 l
b111 3"
b1111 F
b1111 {
b1111 2"
b1111 4"
05
14
#15
b1111 !
b1111 H
b1111 5"
15
