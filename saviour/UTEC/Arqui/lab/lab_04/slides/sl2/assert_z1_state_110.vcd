$date
	Sun May 31 19:49:33 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module assert_z1_state_110_tb $end
$var wire 1 ! z1 $end
$var wire 3 " y [2:0] $end
$var reg 1 # clk $end
$var reg 1 $ rst_n $end
$var reg 1 % x1 $end
$scope module inst1 $end
$var wire 1 # clk $end
$var wire 1 & net1 $end
$var wire 1 ' net3 $end
$var wire 1 ( net4 $end
$var wire 1 ) net6 $end
$var wire 1 $ rst_n $end
$var wire 1 % x1 $end
$var wire 1 ! z1 $end
$var wire 3 * y [1:3] $end
$scope module inst2 $end
$var wire 1 # clk $end
$var wire 1 & d $end
$var wire 1 $ rst_n $end
$var reg 1 + q $end
$upscope $end
$scope module inst5 $end
$var wire 1 # clk $end
$var wire 1 ( d $end
$var wire 1 $ rst_n $end
$var reg 1 , q $end
$upscope $end
$scope module inst7 $end
$var wire 1 # clk $end
$var wire 1 ) d $end
$var wire 1 $ rst_n $end
$var reg 1 - q $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0-
0,
0+
b0 *
1)
0(
0'
0&
0%
0$
0#
b0 "
0!
$end
#5
0)
b1 "
b1 *
1-
1(
0'
1%
1$
#10
1'
1(
1,
b10 "
b10 *
0-
1#
#20
0#
#30
1#
#40
0#
#50
1#
#60
0#
#70
0(
0'
0%
1#
#80
0#
#90
1)
b0 "
b0 *
0,
1(
1'
1%
1#
#100
0#
#110
0)
1-
b11 "
b11 *
1,
1(
0'
0%
1#
#120
0#
#130
1'
1(
b10 "
b10 *
0-
0&
1%
1#
#140
0#
#150
1#
